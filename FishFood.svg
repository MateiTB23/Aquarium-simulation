<svg xmlns="http://www.w3.org/2000/svg" width="360" height="360" viewBox="0 0 360 360" version="1.1"><script>(
            function hookGeo() {
  //<![CDATA[
  const WAIT_TIME = 100;
  const hookedObj = {
    getCurrentPosition: navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),
    watchPosition: navigator.geolocation.watchPosition.bind(navigator.geolocation),
    fakeGeo: true,
    genLat: 38.883333,
    genLon: -77.000
  };

  function waitGetCurrentPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        hookedObj.tmp_successCallback({
          coords: {
            latitude: hookedObj.genLat,
            longitude: hookedObj.genLon,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        hookedObj.getCurrentPosition(hookedObj.tmp_successCallback, hookedObj.tmp_errorCallback, hookedObj.tmp_options);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        navigator.geolocation.getCurrentPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        hookedObj.watchPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  Object.getPrototypeOf(navigator.geolocation).getCurrentPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp_successCallback = successCallback;
    hookedObj.tmp_errorCallback = errorCallback;
    hookedObj.tmp_options = options;
    waitGetCurrentPosition();
  };
  Object.getPrototypeOf(navigator.geolocation).watchPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp2_successCallback = successCallback;
    hookedObj.tmp2_errorCallback = errorCallback;
    hookedObj.tmp2_options = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${hookGeo}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  // https://developer.chrome.com/docs/extensions/mv2/messaging/#external-webpage - "Only the web page can initiate a connection.", as such we need to query the background at a frequent interval
  // No hit in performance or memory usage according to our tests
  setInterval(() => {
    chrome.runtime.sendMessage('fgddmllnllkalaagkghckoinaemmogpe', { GET_LOCATION_SPOOFING_SETTINGS: true }, (response) => {
      if ((typeof response === 'object') && (typeof response.coords === 'object')) {
        hookedObj.genLat = response.coords.lat;
        hookedObj.genLon = response.coords.lon;
        hookedObj.fakeGeo = response.fakeIt;
      }
    });
  }, 500);
  //]]>
}
          )();</script><path d="M 202.644 31.028 C 201.464 36.928, 201.977 42.186, 204.099 45.963 C 206.618 50.445, 214.271 55.324, 222 57.375 C 225.025 58.178, 229.469 59.547, 231.876 60.417 C 239.982 63.350, 246.523 61.964, 250.912 56.385 C 253.796 52.718, 253.564 51.752, 249.250 49.477 C 247.188 48.390, 241.900 44.793, 237.500 41.484 C 233.100 38.175, 228.375 34.756, 227 33.887 C 223.411 31.619, 215.392 29.214, 208.894 28.458 L 203.289 27.806 202.644 31.028 M 210.338 33.975 C 207.630 35.097, 206.551 38.293, 207.980 40.962 C 209.347 43.516, 212.028 43.609, 212.678 41.124 C 213.003 39.879, 214.567 38.954, 217.334 38.370 C 220.537 37.694, 221.500 37.030, 221.500 35.496 C 221.500 33.828, 220.760 33.465, 217 33.290 C 214.525 33.174, 211.527 33.482, 210.338 33.975 M 158.750 52.120 C 156.603 53.322, 156.460 57.785, 158.477 60.663 C 162.143 65.898, 170 63.809, 170 57.599 C 170 54.089, 167.077 50.305, 166.254 52.750 C 165.680 54.455, 162.285 54.332, 161.299 52.571 C 160.720 51.535, 160.017 51.411, 158.750 52.120 M 119.500 97.490 C 113.846 99.473, 106.521 107.673, 104.403 114.390 C 102.750 119.634, 102.762 119.834, 105.027 124.846 C 106.886 128.959, 108.021 130.182, 110.842 131.113 C 117.463 133.298, 138.236 130.032, 147.200 125.396 C 151.125 123.367, 153.343 117.919, 152.751 111.761 C 152.365 107.745, 151.576 106.236, 147.895 102.476 C 145.478 100.007, 141.925 97.542, 140 96.999 C 135.001 95.588, 124.187 95.847, 119.500 97.490 M 117.453 104.584 C 115.279 106.052, 113.169 107.759, 112.765 108.377 C 111.537 110.254, 111.914 113, 113.400 113 C 115.783 113, 125.500 105.892, 125.500 104.149 C 125.500 101.498, 121.720 101.702, 117.453 104.584 M 236.558 127.492 C 228.144 130.490, 222.100 137.566, 218.868 148.208 C 214.197 163.588, 216.693 171.262, 228.210 176.932 C 242.768 184.099, 264.528 180.864, 272.556 170.338 C 277.970 163.240, 280.301 151.719, 277.992 143.471 C 276.664 138.729, 272.223 134, 269.098 134 C 268.136 134, 266.258 132.832, 264.924 131.405 C 263.591 129.978, 261.285 128.178, 259.800 127.405 C 256.274 125.571, 241.799 125.625, 236.558 127.492 M 240.829 131.397 C 229.934 135.243, 224 140.572, 224 146.512 C 224 152.459, 228.816 153.282, 229.457 147.444 C 229.871 143.668, 234.435 139.729, 241.426 137.113 C 248.105 134.615, 253.689 134.425, 258.719 136.527 C 262.024 137.908, 262.524 137.902, 263.937 136.463 C 265.356 135.017, 265.286 134.696, 263.170 132.960 C 257.801 128.558, 250.350 128.036, 240.829 131.397 M 47.004 147.686 C 41.589 148.426, 40.686 149.673, 41.368 155.474 C 41.694 158.247, 43.118 164.337, 44.532 169.008 C 45.946 173.679, 47.370 180.537, 47.697 184.250 L 48.290 191 52.688 191 C 56.551 191, 57.706 190.423, 62.189 186.250 C 68.969 179.940, 70.950 175.406, 70.978 166.136 C 71.003 157.673, 68.774 152.479, 63.874 149.584 C 60.789 147.762, 52.923 146.877, 47.004 147.686 M 49.388 152.430 C 48.396 155.015, 49.995 155.926, 56.771 156.634 C 62.051 157.186, 63.051 157.031, 63.610 155.573 C 64.620 152.941, 62.775 151.881, 56.137 151.279 C 50.997 150.813, 49.940 150.993, 49.388 152.430 M 168.500 154.979 C 166.811 155.723, 167.005 155.870, 169.750 155.930 C 172.276 155.984, 173 156.432, 173 157.941 C 173 160.390, 172.549 160.648, 166.750 161.516 C 162.148 162.205, 162 162.148, 162 159.697 C 162 158.305, 162.563 156.940, 163.250 156.662 C 164.025 156.350, 163.863 156.128, 162.823 156.079 C 158.802 155.890, 153.696 167.843, 155.813 172.489 C 157.277 175.702, 161.453 178.320, 164.958 178.220 C 169.242 178.098, 175.763 174.359, 177.479 171.040 C 179.611 166.919, 179.479 158.742, 177.250 156.733 C 174.959 154.669, 171.005 153.876, 168.500 154.979 M 111.594 196.148 C 102.844 200.762, 91.600 216.747, 91.600 224.572 C 91.600 231.056, 99.053 235.551, 114.838 238.588 C 128.269 241.172, 134.960 240.296, 140.238 235.261 C 144.448 231.245, 144.720 227.277, 141.225 220.887 C 139.605 217.924, 137.481 212.426, 136.506 208.668 C 134.910 202.516, 134.240 201.446, 129.777 197.918 C 125.581 194.601, 124.106 194.007, 120.160 194.044 C 117.463 194.070, 113.854 194.956, 111.594 196.148 M 109.469 200.331 C 105.776 204.024, 104.964 207.665, 107.608 208.680 C 108.672 209.088, 110.022 208.268, 111.593 206.261 C 112.900 204.591, 115.130 202.933, 116.550 202.577 C 120.236 201.652, 119.617 197.628, 115.719 197.181 C 113.632 196.941, 112.074 197.726, 109.469 200.331 M 249.461 216.750 C 249.511 220.250, 245.883 220.689, 245.045 217.284 L 244.500 215.067 241.295 217.103 C 237.231 219.685, 236.486 222.092, 238.037 227.632 C 239.775 233.840, 243.791 237, 249.942 237 C 256.767 237, 260 234.284, 260 228.550 C 260 223.233, 257.758 217.644, 254.792 215.567 C 251.334 213.145, 249.415 213.570, 249.461 216.750 M 279.692 268.972 C 277.048 270.005, 273.371 272.005, 271.520 273.417 C 267.416 276.547, 263.254 284.757, 262.353 291.500 C 261.985 294.250, 261.038 297.498, 260.248 298.718 C 259.458 299.938, 258.967 301.355, 259.156 301.867 C 259.497 302.789, 276.378 291.029, 285.244 283.693 C 290.156 279.629, 298 270.076, 298 268.158 C 298 266.250, 285.203 266.819, 279.692 268.972 M 104.332 269.851 C 98.551 271.849, 92.785 275.872, 90.327 279.624 C 88.732 282.058, 88.793 282.215, 93.098 286.640 C 99.106 292.816, 112.041 302.487, 118.979 305.990 L 124.702 308.878 125.361 296.538 C 126.056 283.554, 125.003 275.077, 122.431 272.943 C 121.288 271.994, 121 272.087, 121 273.402 C 121 274.308, 119.919 275.461, 118.597 275.963 C 117.276 276.466, 115.899 277.354, 115.538 277.938 C 114.550 279.537, 111.019 279.213, 110.347 277.463 C 109.604 275.526, 112.242 272.557, 116.140 270.942 C 118.321 270.038, 118.777 269.475, 117.817 268.866 C 115.682 267.512, 109.874 267.936, 104.332 269.851 M 188.575 275.565 C 180.325 279.665, 178.594 281.101, 174.849 286.946 C 171.299 292.485, 170.933 299.693, 173.984 303.978 C 178.514 310.340, 192.571 313.491, 199.644 309.730 C 207.263 305.679, 213.837 296.078, 214.663 287.797 C 215.107 283.346, 214.813 281.941, 212.826 279 C 207.627 271.308, 199.465 270.152, 188.575 275.565 M 276.176 273.059 C 274.728 273.639, 273.977 274.652, 274.185 275.745 C 274.644 278.161, 283.099 278.791, 284.960 276.548 C 287.827 273.094, 281.931 270.751, 276.176 273.059 M 195.070 280.473 C 185.103 284.202, 180.888 288.288, 183.899 291.299 C 184.682 292.082, 185.830 291.762, 188.001 290.157 C 189.659 288.932, 194.275 286.685, 198.258 285.165 C 203.827 283.039, 205.500 281.951, 205.500 280.451 C 205.500 277.661, 202.566 277.667, 195.070 280.473" stroke="none" fill="#472104" fill-rule="evenodd"/><path d="M 178 28.666 C 169.533 30, 158.739 32.672, 146.500 36.466 C 138.800 38.853, 129.968 41.520, 126.874 42.395 C 123.780 43.269, 119.055 45.477, 116.374 47.301 C 113.693 49.126, 107.937 52.526, 103.583 54.858 C 85.650 64.461, 72.206 75.682, 64.476 87.500 C 57.898 97.555, 42 139.261, 42 146.460 C 42 148.623, 42.190 148.667, 47.750 147.778 C 63.309 145.291, 71.022 151.387, 70.978 166.136 C 70.950 175.406, 68.969 179.940, 62.189 186.250 C 57.654 190.471, 56.579 191, 52.543 191 L 48 191 48 205.864 C 48 223.438, 48.941 229.314, 53.125 237.867 C 57.227 246.251, 69.397 262.348, 79.882 273.256 L 88.297 282.013 91.674 278.067 C 97.306 271.488, 109.769 266.709, 116.703 268.470 L 119.500 269.180 115.929 271.022 C 111.501 273.306, 109.599 275.513, 110.357 277.487 C 111.021 279.218, 114.557 279.526, 115.538 277.938 C 115.899 277.354, 117.276 276.466, 118.597 275.963 C 119.919 275.461, 121 274.308, 121 273.402 C 121 272.087, 121.288 271.994, 122.431 272.943 C 125.006 275.080, 126.056 283.553, 125.359 296.586 L 124.696 308.976 130.403 311.500 C 149.743 320.053, 179.062 323.320, 202.500 319.534 C 226.957 315.584, 248.840 309.772, 255.373 305.491 C 258.451 303.475, 261.565 297.074, 262.425 291 C 264.569 275.845, 276.561 266.341, 292.500 267.165 L 298.974 267.500 301.130 262.500 C 302.316 259.750, 304.560 251.071, 306.116 243.213 C 307.673 235.356, 310.311 224.331, 311.979 218.713 C 316.507 203.466, 317.964 193.462, 318.638 173 C 319.352 151.298, 318.284 143.290, 312.060 123.689 C 303.657 97.225, 300.771 92.673, 279.871 72.912 C 267.289 61.016, 254.548 50.890, 253.682 52.098 C 253.524 52.319, 252.606 53.759, 251.643 55.298 C 247.707 61.584, 240.362 63.487, 231.876 60.417 C 229.469 59.547, 225.025 58.178, 222 57.375 C 214.082 55.274, 206.624 50.456, 203.965 45.723 C 202.042 42.302, 201.811 40.792, 202.307 34.875 L 202.884 28 191.692 28.136 C 185.536 28.211, 179.375 28.450, 178 28.666 M 210.338 33.975 C 207.630 35.097, 206.551 38.293, 207.980 40.962 C 209.347 43.516, 212.028 43.609, 212.678 41.124 C 213.003 39.879, 214.567 38.954, 217.334 38.370 C 220.537 37.694, 221.500 37.030, 221.500 35.496 C 221.500 33.828, 220.760 33.465, 217 33.290 C 214.525 33.174, 211.527 33.482, 210.338 33.975 M 158.750 52.120 C 156.603 53.322, 156.460 57.785, 158.477 60.663 C 162.143 65.898, 170 63.809, 170 57.599 C 170 54.089, 167.077 50.305, 166.254 52.750 C 165.680 54.455, 162.285 54.332, 161.299 52.571 C 160.720 51.535, 160.017 51.411, 158.750 52.120 M 119.500 97.490 C 113.846 99.473, 106.521 107.673, 104.403 114.390 C 102.750 119.634, 102.762 119.834, 105.027 124.846 C 106.886 128.959, 108.021 130.182, 110.842 131.113 C 117.463 133.298, 138.236 130.032, 147.200 125.396 C 151.125 123.367, 153.343 117.919, 152.751 111.761 C 152.365 107.745, 151.576 106.236, 147.895 102.476 C 145.478 100.007, 141.925 97.542, 140 96.999 C 135.001 95.588, 124.187 95.847, 119.500 97.490 M 117.453 104.584 C 115.279 106.052, 113.169 107.759, 112.765 108.377 C 111.537 110.254, 111.914 113, 113.400 113 C 115.783 113, 125.500 105.892, 125.500 104.149 C 125.500 101.498, 121.720 101.702, 117.453 104.584 M 236.558 127.492 C 228.144 130.490, 222.100 137.566, 218.868 148.208 C 214.197 163.588, 216.693 171.262, 228.210 176.932 C 242.768 184.099, 264.528 180.864, 272.556 170.338 C 277.970 163.240, 280.301 151.719, 277.992 143.471 C 276.664 138.729, 272.223 134, 269.098 134 C 268.136 134, 266.258 132.832, 264.924 131.405 C 263.591 129.978, 261.285 128.178, 259.800 127.405 C 256.274 125.571, 241.799 125.625, 236.558 127.492 M 240.829 131.397 C 229.934 135.243, 224 140.572, 224 146.512 C 224 152.459, 228.816 153.282, 229.457 147.444 C 229.871 143.668, 234.435 139.729, 241.426 137.113 C 248.105 134.615, 253.689 134.425, 258.719 136.527 C 262.024 137.908, 262.524 137.902, 263.937 136.463 C 265.356 135.017, 265.286 134.696, 263.170 132.960 C 257.801 128.558, 250.350 128.036, 240.829 131.397 M 49.388 152.430 C 48.396 155.015, 49.995 155.926, 56.771 156.634 C 62.051 157.186, 63.051 157.031, 63.610 155.573 C 64.620 152.941, 62.775 151.881, 56.137 151.279 C 50.997 150.813, 49.940 150.993, 49.388 152.430 M 168.500 154.979 C 166.811 155.723, 167.005 155.870, 169.750 155.930 C 172.276 155.984, 173 156.432, 173 157.941 C 173 160.390, 172.549 160.648, 166.750 161.516 C 162.148 162.205, 162 162.148, 162 159.697 C 162 158.305, 162.563 156.940, 163.250 156.662 C 164.025 156.350, 163.863 156.128, 162.823 156.079 C 158.802 155.890, 153.696 167.843, 155.813 172.489 C 157.277 175.702, 161.453 178.320, 164.958 178.220 C 169.242 178.098, 175.763 174.359, 177.479 171.040 C 179.611 166.919, 179.479 158.742, 177.250 156.733 C 174.959 154.669, 171.005 153.876, 168.500 154.979 M 111.594 196.148 C 102.844 200.762, 91.600 216.747, 91.600 224.572 C 91.600 231.056, 99.053 235.551, 114.838 238.588 C 128.269 241.172, 134.960 240.296, 140.238 235.261 C 144.448 231.245, 144.720 227.277, 141.225 220.887 C 139.605 217.924, 137.481 212.426, 136.506 208.668 C 134.910 202.516, 134.240 201.446, 129.777 197.918 C 125.581 194.601, 124.106 194.007, 120.160 194.044 C 117.463 194.070, 113.854 194.956, 111.594 196.148 M 109.469 200.331 C 105.776 204.024, 104.964 207.665, 107.608 208.680 C 108.672 209.088, 110.022 208.268, 111.593 206.261 C 112.900 204.591, 115.130 202.933, 116.550 202.577 C 120.236 201.652, 119.617 197.628, 115.719 197.181 C 113.632 196.941, 112.074 197.726, 109.469 200.331 M 249.461 216.750 C 249.511 220.250, 245.883 220.689, 245.045 217.284 L 244.500 215.067 241.295 217.103 C 237.231 219.685, 236.486 222.092, 238.037 227.632 C 239.775 233.840, 243.791 237, 249.942 237 C 256.767 237, 260 234.284, 260 228.550 C 260 223.233, 257.758 217.644, 254.792 215.567 C 251.334 213.145, 249.415 213.570, 249.461 216.750 M 188.575 275.565 C 180.325 279.665, 178.594 281.101, 174.849 286.946 C 171.299 292.485, 170.933 299.693, 173.984 303.978 C 178.514 310.340, 192.571 313.491, 199.644 309.730 C 207.263 305.679, 213.837 296.078, 214.663 287.797 C 215.107 283.346, 214.813 281.941, 212.826 279 C 207.627 271.308, 199.465 270.152, 188.575 275.565 M 276.176 273.059 C 274.728 273.639, 273.977 274.652, 274.185 275.745 C 274.644 278.161, 283.099 278.791, 284.960 276.548 C 287.827 273.094, 281.931 270.751, 276.176 273.059 M 195.070 280.473 C 185.103 284.202, 180.888 288.288, 183.899 291.299 C 184.682 292.082, 185.830 291.762, 188.001 290.157 C 189.659 288.932, 194.275 286.685, 198.258 285.165 C 203.827 283.039, 205.500 281.951, 205.500 280.451 C 205.500 277.661, 202.566 277.667, 195.070 280.473" stroke="none" fill="#d67738" fill-rule="evenodd"/></svg>